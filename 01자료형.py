#visual studio 상에서 python 파일을 실행하는 방법 
#오른쪽 마우스- 터미널에서 python 파일 실행, 재생버튼, 실행-디버깅시작
#터미널-우클릭-오른쪽으로 창을 옮길 수 있음

#<자료형>
# 숫자

print(5)
print(-10)
print(3.14)
print(1000)
print(5+3)
print(5*(4+1))
#C의 printf와 비교
#printf : 큰따옴표, 문자열, 변환문자, 제어문자로 줄바꿈
#print : 숫자, 문자, 문자열 등 다양한 자료형, 숫자인 경우 계산 가능, 자동으로 줄바꿈 
#터미널 창에서 cls로 복잡한 창을 초기화 가능함.

#문자, 문자열 
print("문자열")
print('풍선')
print("ㅋㅋㅋㅋㅋㅋㅋ")
print("ㅋ"*9) #문자열, 문자와 정수곱의 조화 

#불 : 참과 거짓을 결과값으로 가지는 자료형
print(5>10) 
print(5<10)
print(True)
print(False)
print(not (5>10))

#변수 : 값을 저장할 수 있는 공간
#print문에서 변수에 할당된 값을 불러오기 

animal = "강아지" #할당값이 문자, 문자열이면 반드시 따옴표
name = "연탄이"
age = 4
hobby = "산책"
is_adult = age >= 3 #할당값에 앞서 선언한 변수 사용 가능함.
                    #is_adult변수에 bool을 할당하기 위해 그를 만들기 위한 대소 연산자 사용함.

print("우리집" + animal + "의 이름은" + name + "에요")
print("우리집""강아지""의 이름은""연탄이""에요") #동일함, print의 변수 수는 무한정, 같은 문자(열)끼리는 ,구분 반드시 할 필요없음, 따옴표만 제대로
print("우리집","강아지","의 이름은","연탄이","에요")#콤마기준으로 띄어쓰기 형성됨 
hobby = "낮잠" #변수 할당값은 다시 정의를 통해 바꿀 수 있다. 
print(name + "는 " + str(age) + "살이며," + hobby + "을 아주 좋아해요") #print구문에서 숫자 변수사용을 +로 연결해서 사용한다면, str로 반드시 문자형으로 자료형 바꿔야함
print(name + "는 어른일까요?" +str(is_adult)) #bool도 마찬가지 str()로 자료형 바꿔야함.
print(name, "는 어른일까요?", is_adult) #print구문에서 ,로 연결하는 것과 +로 연결하는 것 구분!

#주석처리
# # or  ''' ''' 
#cntrl / 

